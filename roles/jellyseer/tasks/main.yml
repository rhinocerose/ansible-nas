---
- name: Start jellyseerr
  block:
    - name: Create jellyseerr Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ jellyseerr_data_directory }}"
        - "{{ jellyseerr_data_directory }}/config"

    - name: jellyseerr
      community.docker.docker_container:
        name: "{{ jellyseerr_container_name }}"
        image: "{{ jellyseerr_image_name }}:{{ jellyseerr_image_version }}"
        pull: true
        volumes:
          - "{{ jellyseerr_data_directory }}/config:/app/config:rw"
        ports:
          - "{{ jellyseerr_webui_port }}:5055"
        env:
          TZ: "{{ ansible_nas_timezone }}"
          PUID: "{{ jellyseerr_user_id }}"
          PGID: "{{ jellyseerr_group_id }}"
        restart_policy: unless-stopped
        memory: "{{ jellyseerr_memory }}"
        labels:
          traefik.enable: "{{ jellyseerr_available_externally | string }}"
          traefik.http.routers.jellyseerr.rule: "Host(`{{ jellyseerr_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.jellyseerr.tls.certresolver: "letsencrypt"
          traefik.http.routers.jellyseerr.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.jellyseerr.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.jellyseerr.loadbalancer.server.port: "{{ jellyseerr_webui_port }}"
  when: jellyseerr_enabled is true

- name: Stop jellyseerr
  block:
    - name: Stop jellyseerr
      community.docker.docker_container:
        name: "{{ jellyseerr_container_name }}"
        state: absent
  when: jellyseerr_enabled is false
